"use client";

import Image from "next/image";
import { useState } from "react";
import { LuCopy } from "react-icons/lu";

export default function TwoFactorAuth() {
  const [authenticationCode, setAuthenticationCode] = useState("");
  const [isEnabled, setIsEnabled] = useState(false);
  const qrCodeValue = "73nHD992nndd"; // This would typically be generated by your backend
  const [copied, setCopied] = useState(false);
  const copyToClipboard = () => {
    navigator.clipboard.writeText(qrCodeValue);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };
  const handleEnable2FA = (e: React.FormEvent) => {
    e.preventDefault();
    if (!authenticationCode) {
      alert("Please enter the authentication code");
      return;
    }
    // Verify the code with your backend here
    setIsEnabled(true);
    alert("2FA has been enabled successfully!");
  };

  return (
    <div className="bg-card p-6 rounded-[20px] shadow">
      <h1 className="text-2xl font-bold mb-6">
        Enable 2-factor Authentication
      </h1>

      <div className="space-y-6">
        <p className="text-primary">
          Scan the QR code with Google Authenticator app.
        </p>

        {/* QR Code Display */}
        <div className="flex flex-col items-center">
          <div className="bg-white p-4 rounded-lg border border-gray-300 mb-4">
            {/* Replace with actual QR code generation or image */}
            <div className="w-48 h-48 bg-gray-100 flex items-center justify-center">
              <span className="text-gray-500">QR Code Placeholder</span>
            </div>
          </div>

          <p className="text-center text-gray-500 mb-4">
            or enter the code below:
          </p>

          <div className="flex items-center w-full gap-2 px-3  bg-card-foreground rounded-[20px] border border-gray-200 dark:border-slate-700">
            <div className="flex-1  p-3  dark:border-slate-700">
              <p className="font-mono text-lg">{qrCodeValue}</p>
            </div>
            <button
              onClick={copyToClipboard}
              className=" rounded-[20px] pr-4  transition-colors"
            >
              {copied ? "Copied!" : <LuCopy className="text-lg" />}
            </button>
          </div>
        </div>

        {/* Authentication Form */}
        <form onSubmit={handleEnable2FA} className="space-y-4">
          <div>
            <label className="block text-sm font-medium mb-2">
              Authentication Code
            </label>
            <input
              type="text"
              value={authenticationCode}
              onChange={(e) => setAuthenticationCode(e.target.value)}
              placeholder="Enter code"
              className="w-full px-4 py-3 border border-gray-300 dark:border-slate-700 rounded-[20px] focus:ring-orange-500 focus:border-orange-500"
            />
          </div>

          <button
            type="submit"
            className={`w-full px-6 py-3 rounded-[20px] font-medium text-black text-sm ${
              authenticationCode
                ? "gradient-bg hover:opacity-90"
                : "bg-gray-400 cursor-not-allowed"
            } transition-colors`}
          >
            {isEnabled ? "2FA Enabled" : "Enable"}
          </button>
        </form>

        {isEnabled && (
          <div className="mt-4 p-3 bg-green-100 text-green-800 rounded-lg text-center">
            2-factor authentication is now active for your account.
          </div>
        )}
      </div>
    </div>
  );
}
